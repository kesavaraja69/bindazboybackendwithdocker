version: '3.7'
services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - '80:80'
      - '443:443'
    volumes:
      # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf/:ro
      # - ./certbot/www:/var/www/certbot/:ro
    depends_on:
      - node-app
  # certbot:
  #   image: certbot/certbot:latest
  #   volumes:
  #     - ./certbot/www/:/var/www/certbot/:rw
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   command: certonly --webroot -w /var/www/certbot --force-renewal --email kesav416@gmail.com -d demostickerdocker.xy --agree-tos
  #   depends_on:
  #     - nginx

  db:
    image: postgres:14.9
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=kesava69isdragon
      - POSTGRES_DB=mydb
      - 'FILLA_DB_USER=ubuntu'
      - 'FILLA_DB_PASSWORD=kesava69isdragon'
      - 'FILLA_DB_DATABASE=bindazboyappdb'
      - 'POSTGRES_PASSWORD=dragon69'
    healthcheck:
      test: 'pg_isready --username=postgres && psql --username=postgres --list'
      timeout: 9s
      retries: 5
    volumes:
      - ./init/01-filladb.sh:/docker-entrypoint-initdb.d/initdb.sh
      - db-data:/var/lib/postgresql/data

  node-app:
    container_name: node-app
    build: .
    # ports:
    #   - '8383:8383'
    environment:
      - PORT=8383
      - WAIT_HOSTS=postgres:5432
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    links:
      - db

volumes:
  db-data:
